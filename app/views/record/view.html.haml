- content_for :title, @concept.title
- if desc = description(@doc)
  - set_meta_tags :description => desc
- set_meta_tags :keywords => keywords(@doc)
.div
  .page-header
    %h1
      = type_image(@concept.type)
      %span{ property: 'dc:title'}= @concept.title
      - if @concept.alternate_titles.size > 0
        %small
          aka
          - alt_title_tags = @concept.alternate_titles.map do |t|
            - capture_haml do
              %span{:property => 'dc:title'}
                = t
          = safe_join(alt_title_tags, ", ")

  .container-fluid
    .row-fluid
      .span8
        - case @concept.type
        - when 'collection'
          = render 'record/collection', :concept => @concept, :doc => @doc
        - when 'party'
          - case @concept.subtype
          - when 'person'
            = render 'record/person', :concept => @concept, :doc => @doc
          - when 'group'
            = render 'record/org', :concept => @concept, :doc => @doc
          - else
            = render 'record/other', :concept => @concept, :doc => @doc
        - else
          = render 'record/other', :concept => @concept, :doc => @doc

        %ul.unstyled
          - related_info(@doc).each do |info|
            %li{:typeof => 'v:WebPage'}
              - case info.type
              - when 'publication'
                %i.icon-book
              - else
                %i.icon-link
              %a{:href => info.identifier, :property => "v:url"}
                %span{:property => "v:title"}= info.title

        - subjects(@doc).each do |subject|
          %span.badge{:property => 'v:keywords', :title => subject.type}
            = subject.name
          &nbsp;

        - if r = rights(@doc)
          = render 'record/rights', :rights => r

      .span4
        %div.sigma-parent-small
          .sigma-expand{:'data-href' => concept_gexf_path(@concept.id),
                        :'data-delay' => 1000}

.row-fluid
  %p{:style => 'text-align: right'}
    %a.muted{'data-toggle' => 'collapse', :href => '#xml-container',
       :onclick => '$(this).addClass("hidden")'}
      View Source XML
  #xml-container.collapse
    %pre
      %code#rifcs.prettyprint.linenums
        =annotated_xml(@doc)